---
import { loadQuery } from "../../../nichiha/lib/load-query";
import logo from "../../assets/mrpg-logo.jpeg";





const { data: navigation } = await loadQuery({
  query: `*[_type == "navigation"]{
      title,
      navId,
      items[]{
        label,
        url,
        internalLink->{
          slug
        },
        subItems[]{
          label,
          url,
          internalLink->{
            slug
          }
        }
      }
    }`,
});
---

<script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"
></script>
<nav
  x-data="{ isOpen: false, currentPath: '', scrolled: false, activeDropdown: null }"
  x-init="
    currentPath = window.location.pathname;
    let lastScrollTop = 200;
    const nav = $el;
    window.addEventListener('scroll', () => {
      const st = window.pageYOffset || document.documentElement.scrollTop;
      scrolled = st > 50;
      if (st > lastScrollTop && st > 200) {
        nav.style.transform = 'translateY(-100%)';
      } else {
        nav.style.transform = 'translateY(0)';
      }
      lastScrollTop = st <= 0 ? 0 : st; 
    });

    // Close dropdown when clicking outside
    document.addEventListener('click', (e) => {
      if (!nav.contains(e.target)) {
        activeDropdown = null;
      }
    });
  "
  :class="{ 'scrolled': scrolled }"
>
  <div class="nav-container">
    <!-- Logo -->
    <div class="logo-wrapper">
      <a href="/" class="logo-link">
        <img src={logo.src} loading="lazy" class="logo" alt="MRPG Logo" />
      </a>
    </div>

    <!-- Hamburger Icon -->
    <button
      id="menu-toggle"
      aria-label="Toggle Menu"
      @click="isOpen = !isOpen"
      :class="{ 'active': isOpen }"
    >
      <span class="menu-icon" :class="{ 'open': isOpen }"></span>
      <span class="menu-icon" :class="{ 'open': isOpen }"></span>
      <span class="menu-icon" :class="{ 'open': isOpen }"></span>
    </button>

    <!-- Navigation Links -->
    <div class="main-menu-wrapper">
      <ul class="main-menu" :class="isOpen ? 'show' : 'hide'">
        {
          navigation?.[0]?.items?.map((item, index) => {
            const itemUrl = item.internalLink?.slug?.current
              ? `/${item.internalLink.slug.current}`
              : item.url;
            const hasSubmenu = item.subItems && item.subItems.length > 0;

            return (
              //
              <li class="nav-item" x-data="{}">
                <div
                  class="nav-link-wrapper"
                  style="display: flex; align-items: center;"
                >
                  <a
                    href={itemUrl}
                    class="nav-link"
                    x-bind:class={`currentPath === '${itemUrl}' ? 'active' : ''`}
                  >
                    {item.label}
                  </a>

                  {hasSubmenu && (
                    <button
                      class="submenu-toggle"
                      @click.prevent={`if (window.matchMedia('(max-width: 1100px)').matches) {
          activeDropdown = activeDropdown === ${index} ? null : ${index};
        }`}
                      aria-label="Toggle Submenu"
                      style="background: none; border: none; margin-left: 0.5rem; cursor: pointer;"
                    >
                      <svg
                        class="dropdown-icon"
                        viewBox="0 0 20 20"
                        fill="currentColor"
                        width="14"
                        height="14"
                      >
                        <path
                          fill-rule="evenodd"
                          d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a 1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
                          clip-rule="evenodd"
                        />
                      </svg>
                    </button>
                  )}
                </div>

                {hasSubmenu && (
                  <ul
                    class="sub-menu"
                    x-bind:class={`activeDropdown === ${index} ? 'active' : ''`}
                    x-show={`window.matchMedia('(max-width: 1100px)').matches ? activeDropdown === ${index} : true`}
                  >
                    {item.subItems.map((subItem) => {
                      const subItemUrl = subItem.internalLink?.slug?.current
                        ? `/${subItem.internalLink.slug.current}`
                        : subItem.url;

                      return (
                        <li class="sub-item">
                          <a
                            href={subItemUrl}
                            class="sub-link"
                            @click="activeDropdown = null"
                          >
                            {subItem.label}
                          </a>
                        </li>
                      );
                    })}
                  </ul>
                )}
              </li>
            );
          })
        }

        <!-- Contact Button -->
        <li class="nav-item contact-item">
          <a href="/contact" class="nav-link contact-btn">
            <span>Contact Us</span>
          </a>
        </li>
      </ul>


    </div>
  </div>
</nav>

<style>
  /* Navigation Styles */
  nav {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    width: 100%;
    box-shadow: var(--shadow-soft);
    padding: var(--spacing-md) var(--spacing-lg);
    font-size: var(--font-size-base);
    position: fixed;
    top: 0;
    z-index: 500;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    border-bottom: 1px solid rgba(45, 74, 43, 0.1);
  }

  nav.scrolled {
    background: rgba(255, 255, 255, 0.98);
    box-shadow: var(--shadow-medium);
    padding: var(--spacing-sm) var(--spacing-lg);
  }

  .nav-container {
    max-width: 1200px;
    margin: 0 auto;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  /* Logo Styles */
  .logo-wrapper {
    display: flex;
    align-items: center;
  }

  .logo-link {
    display: flex;
    align-items: center;
    text-decoration: none;
    transition: all 0.3s ease;
  }

  .logo-link:hover {
    transform: scale(1.05);
  }

  .logo {
    max-width: 150px;
    height: auto;
    transition: all 0.3s ease;
  }

  nav.scrolled .logo {
    max-width: 50px;
  }

  /* Menu Styles */
  ul {
    list-style-type: none;
    margin: 0;
    padding: 0;
  }

  .main-menu-wrapper {
    display: flex;
    align-items: center;
  }

  .main-menu {
    display: flex;
    align-items: center;
    gap: var(--spacing-sm);
  }

  .nav-item {
    position: relative;
  }

  .nav-link {
    display: inline-block;
    position: relative;
    color: rgb(55, 55, 55);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    text-decoration: none;
    padding: var(--spacing-sm) var(--spacing-md);
    font-weight: 500;
    font-size: var(--font-size-sm);
    white-space: nowrap;
  }

  .nav-link.active {
    color: var(--lake-azure);
  }

  .nav-link:hover {
    color: var(--lake-azure);
  }

  /* Dropdown Icon */
  .dropdown-icon {
    width: 14px;
    height: 14px;
    transition: transform 0.2s ease;
    opacity: 0.7;
  }
  .nav-item:hover .dropdown-icon {
    transform: rotate(180deg);
    opacity: 1;
  }

  /* Dropdown Styles */
  .sub-menu {
    position: absolute;
    font-size: 14px !important;
    top: calc(0 + 20px);
    left: 0;
    background: white;
    min-width: 200px;
    box-shadow:
      0px 4px 6px rgba(0, 0, 0, 0.1),
      0px -4px 0px rgba(0, 0, 0, 0);
    opacity: 0;
    visibility: hidden;
    transform: translateY(10px);
    transition: all 0.3s ease;
    z-index: 1001;
  }

  .nav-item:hover .sub-menu {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }

  .sub-link {
    display: block;
    padding: var(--spacing-sm) var(--spacing-md);
    color: var(--lake-depth);
    text-decoration: none;
    text-transform: none;
    font-weight: 400;
    transition: all 0.2s ease;
  }

  .sub-link:hover {
    background: var(--lake-depth);
    color: white;
  }
  .submenu-toggle {
    margin: 0;
    padding: 0;
    position: relative;
    left: -25px;
  }

  /* Contact Button */
  .contact-item {
    margin-left: var(--spacing-sm);
  }

  .contact-btn {
    background: var(--lake-azure);
    color: white !important;
    font-weight: 600;
    box-shadow: var(--shadow-soft);
    border: none;
    transition: all 0.3s ease;
  }

  .contact-btn:hover {
    background: #417c9d;
    transform: translateY(-2px);
    box-shadow: var(--shadow-medium);
  }

  .contact-btn::after {
    display: none;
  }

  .contact-icon {
    width: 16px;
    height: 16px;
  }
  /* Hamburger Menu */
  #menu-toggle {
    display: none;
    background: none;
    border: none;
    cursor: pointer;
    padding: var(--spacing-sm);
    border-radius: 6px;
    transition: all 0.3s ease;
  }



  .menu-icon {
    display: block;
    width: 25px;
    height: 3px;
    background: var(--lake-depth);
    margin: 5px 0;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    border-radius: 2px;
  }



  .menu-icon.open:nth-child(1) {
    transform: translateY(8px) rotate(45deg);
   background:white;
  }

  .menu-icon.open:nth-child(2) {
    opacity: 0;
    transform: scale(0);
   background: white;
  }

  .menu-icon.open:nth-child(3) {
    transform: translateY(-8px) rotate(-45deg);
   background: white;
  }

  /* Mobile Styles */
  @media (max-width: 1100px) {
    nav {
      padding: var(--spacing-md) var(--spacing-lg);
    }
    nav.scrolled {
      background: rgba(255, 255, 255, 0.98);
      box-shadow: var(--shadow-medium);
      padding: var(--spacing-md) var(--spacing-md);
    }
    #menu-toggle {
      display: block;
      position: absolute;
      top: 25px;
      right: 20px;
      z-index: 1001;
    }

    nav.scrolled #menu-toggle {
      top: 15px;
      right: 15px;
    }

    .main-menu {
      position: fixed;
      top: 0;
      padding-top: var(--spacing-2xl);
      left: 0;
      width: 100%;
      height: 100vh;
      background: var(--lake-depth);
      flex-direction: column;
      align-items: center;
      gap: var(--spacing-lg);
      opacity: 0;
      visibility: hidden;
      transform: translateX(-100%);
      transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
      z-index: 999;
    }

    .main-menu.show {
      opacity: 1;
      visibility: visible;
      transform: translateX(0);
    }

    .nav-link {
      color: white;
      font-size: var(--font-size-lg);
      padding: var(--spacing-sm);
      border-radius: 8px;
      text-align: center;
      min-width: 200px;
    }

    .nav-link:hover {
      background: unset;
      color: var(lake-seafoam);
    }

    .nav-link.active {
      background: rgba(255, 255, 255, 0.2);
      color: white;
    }

    .nav-link::after {
      display: none;
    }
    .dropdown-icon {

    fill: white;


  }

    .sub-menu {
      position: static;
      background: unset;
      box-shadow: none;
      border: none;
      border-radius: 8px;
      margin-top: var(--spacing-sm);
      opacity: 1;
      visibility: visible;
      transform: none;
      min-width: auto;
      width: 100%;
    }

    .sub-link {
      color: white;
      text-align: center;
    }

    .sub-link:hover {
      background: unset;
      color: unset;
    }

    .mobile-contact {
      display: block;
      margin-top: var(--spacing-lg);
    }

    .contact-btn {
      background: var(--lake-azure);
      box-shadow: var(--shadow-soft);
    }


  }

  @media (max-width: 768px) {
    nav {
      padding: var(--spacing-md) var(--spacing-md);
    }

    .logo {
      max-width: 90px;
    }

    nav.scrolled .logo {
      max-width: 70px;
    }
  }

  @media (max-width: 480px) {
    .logo-text {
      display: none;
    }

    .main-menu {
      gap: var(--spacing-md);
    }

    .nav-link {
      font-size: var(--font-size-base);
      min-width: 180px;
    }
  }

  /* Accessibility */
  @media (prefers-reduced-motion: reduce) {
    nav,
    .nav-link,
    .menu-icon,
    .main-menu,
    .sub-menu {
      transition: none;
    }
  }

  /* Focus styles for accessibility */
  .nav-link:focus-visible,
  #menu-toggle:focus-visible {
    outline: 2px solid var(--lake-teal);
    outline-offset: 2px;
  }
</style>
