---
// src/pages/events/[slug].astro
import { loadQuery } from "../../../nichiha/lib/load-query";
import Layout from "../../layouts/Layout.astro";

export const prerender = true;

export async function getStaticPaths() {
  const query = `*[_type == "event"] {
    title,
    slug,
    date,
    location,
    description,
    image{    
    asset->{
        url
}}
  }`;

  const { data: events } = await loadQuery({ query });

  console.log("Events fetched at build:", JSON.stringify(events, null, 2));
  console.log("Number of events:", events?.length);

  if (!events || !Array.isArray(events) || !events.length) {
    throw new Error("No events found from Sanity at build time!");
  }

  return events.map((event) => ({
    params: { slug: event.slug.current },
    props: { event },
  }));
}

const { event } = Astro.props;

if (!event) {
  return new Response(null, {
    status: 404,
    statusText: "Event not found",
  });
}

const eventDate = new Date(event.date);
---

<Layout title={event.title}>
  <style>
    .container {
      margin: 0 auto;
      padding: 2rem 2rem 4rem 2rem;
    }

    .back-link {
      color: var(--lake-azure);
      text-decoration: none;
      margin-bottom: 2rem;
      display: inline-block;
    }

    .back-link:hover {
      text-decoration: underline;
    }

    .event-header {
      margin-bottom: 2rem;
    }

    .event-title {
      font-size: 2.5rem;
      font-weight: bold;
      margin-bottom: 2rem;
    }

    .event-meta {
      display: grid;
      gap: 1rem;
      color: #333;
      margin-bottom: 1rem;
    }

    .meta-item {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      font-weight: 600;
      color: black;
    }

    .event-image {
      width: 70%;
      object-fit: cover;
      border-radius: 8px;
      margin-bottom: 2rem;
    }

    .event-description {
      font-size: 1.1rem;
      line-height: 1.6;
      color: #555;
      margin-bottom: 2rem;
    }

    .event-details {
      background: #f5f5f5;
      padding: 2rem;
      border-radius: 8px;
      margin-top: 2rem;
    }

    .details-title {
      font-weight: bold;
      margin-bottom: 2rem;
    }

    .details-grid {
      display: grid;
      grid-template-columns: 1fr;
      gap: 1rem;
    }

    .detail-item dt {
      font-weight: bold;
      color: #333;
      margin-bottom: 0.25rem;
    }

    .detail-item dd {
      color: #666;
      margin: 0;
    }

    @media (max-width: 768px) {
      .container {
        padding: 1rem;
      }

      .event-title {
        font-size: 2rem;
      }

      .event-meta {
        flex-direction: column;
        gap: 0.5rem;
      }
    }
  </style>

  <main class="container">
    <!-- Back link -->
    <a href="/events" class="back-link">‚Üê Back to Events Calendar</a>

    <!-- Event header -->
    <header class="event-header">
      <h1 class="event-title">{event.title}</h1>

      <div class="event-meta">
        <div class="meta-item">
          <span></span>
          <time datetime={event.date}>
            {
              eventDate.toLocaleString("en-US", {
                timeZone: "America/New_York",
                weekday: "long",
                year: "numeric",
                month: "long",
                day: "numeric",
                hour: "2-digit",
                minute: "2-digit",
              })
            }
          </time>
        </div>

        {
          event.location && (
            <div class="meta-item">
              <span>üìç</span>
              <span>{event.location}</span>
            </div>
          )
        }
      </div>
    </header>

    <!-- Event image -->
    {
      event.image && (
        <img
          src={event.image.asset.url}
          alt={event.title}
          class="event-image"
        />
      )
    }

    <!-- Event description -->
    {
      event.description && (
        <div class="event-description">
          <h2>About this event</h2>
          <p>{event.description}</p>
        </div>
      )
    }

    <!-- Event details -->
    <div class="event-details">
      <h3 class="details-title">Event Details</h3>
      <dl class="details-grid">
        <div class="detail-item">
          <dt>Date & Time</dt>
          <dd>
            {
              eventDate.toLocaleString("en-US", {
                timeZone: "America/New_York",
                weekday: "long",
                year: "numeric",
                month: "long",
                day: "numeric",
                hour: "2-digit",
                minute: "2-digit",
              })
            }
          </dd>
        </div>
        {
          event.location && (
            <div class="detail-item">
              <dt>Location</dt>
              <dd>{event.location}</dd>
            </div>
          )
        }
      </dl>
    </div>
  </main>
</Layout>
